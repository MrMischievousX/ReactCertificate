{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ComponentToPrint","props","state","name","address","status","gender","bId","dob","className","htmlFor","type","value","this","id","onChange","e","setState","target","checked","namae","style","resize","rows","namw","React","PureComponent","App","componentRef","useRef","handlePrint","useReactToPrint","content","current","ref","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,IAAK,GACLC,IAAK,IARU,E,0CAYnB,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,uBAAOC,QAAQ,OAAf,6BACA,uBACEC,KAAK,OACLR,KAAK,OACLS,MAAOC,KAAKX,MAAMC,KAClBW,GAAG,OACHC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEd,KAAMa,EAAEE,OAAON,cAGpD,sBAAKH,UAAU,eAAf,UACE,uBAAOC,QAAQ,SAAf,0BACA,uBACEC,KAAK,QACLR,KAAK,SACLgB,QAA+B,SAAtBN,KAAKX,MAAMI,OACpBS,SAAU,kBAAM,EAAKE,SAAS,CAAEX,OAAQ,YAE1C,6CACA,qBAAKG,UAAU,WACf,uBACEE,KAAK,QACLR,KAAK,SACLgB,QAA+B,WAAtBN,KAAKX,MAAMI,OACpBS,SAAU,kBAAM,EAAKE,SAAS,CAAEX,OAAQ,cAE1C,kDAEF,gCACE,uBAAOI,QAAQ,MAAf,iCACA,uBACEC,KAAK,OACLS,MAAM,MACNN,GAAG,MACHF,MAAOC,KAAKX,MAAMM,IAClBO,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAET,IAAKQ,EAAEE,OAAON,cAGnD,sBAAKH,UAAU,gBAAf,UACE,uBAAOC,QAAQ,UAAf,2BACA,0BACEW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,EACNT,GAAG,UACHX,KAAK,UACLS,MAAOC,KAAKX,MAAME,QAClBW,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEb,QAASY,EAAEE,OAAON,cAGvD,sBAAKH,UAAU,eAAf,UACE,uBAAOC,QAAQ,gBAAf,kCACA,uBACEC,KAAK,OACLa,KAAK,gBACLV,GAAG,gBACHF,MAAOC,KAAKX,MAAMK,IAClBQ,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEV,IAAKS,EAAEE,OAAON,cAGnD,sBAAKH,UAAU,eAAf,UACE,uBAAOC,QAAQ,SAAf,0BACA,uBACEC,KAAK,QACLR,KAAK,WACLgB,QAA+B,mBAAtBN,KAAKX,MAAMG,OACpBU,SAAU,kBAAM,EAAKE,SAAS,CAAEZ,OAAQ,sBAE1C,uBAAOK,QAAQ,WAAf,gCACA,qBAAKD,UAAU,WACf,uBACEE,KAAK,QACLR,KAAK,UACLgB,QAA+B,eAAtBN,KAAKX,MAAMG,OACpBU,SAAU,kBAAM,EAAKE,SAAS,CAAEZ,OAAQ,kBAE1C,uBAAOK,QAAQ,UAAf,sC,GA3FqBe,IAAMC,eAkGtB,SAASC,IACtB,IAAMC,EAAeC,mBACfC,EAAcC,0BAAgB,CAClCC,QAAS,kBAAMJ,EAAaK,WAG9B,OACE,gCACE,cAAC,EAAD,CAAkBC,IAAKN,IACvB,8BACE,qBAAKO,QAASL,EAAahB,GAAG,YAA9B,kCChHR,IAYesB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88b3d501.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport \"./App.css\";\n\nclass ComponentToPrint extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      address: \"\",\n      status: \"\",\n      gender: \"\",\n      bId: \"\",\n      dob: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"containerEle\">\n          <label htmlFor=\"name\">Full Name :&nbsp;</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            id=\"name\"\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"containerEle\">\n          <label htmlFor=\"gender\">Gender :&nbsp;</label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            checked={this.state.gender === \"Male\"}\n            onChange={() => this.setState({ gender: \"Male\" })}\n          />\n          <label>&nbsp;Male</label>\n          <div className=\"spacer\" />\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            checked={this.state.gender === \"Female\"}\n            onChange={() => this.setState({ gender: \"Female\" })}\n          />\n          <label>&nbsp;Female</label>\n        </div>\n        <div>\n          <label htmlFor=\"dob\">Date of Birth :&nbsp;</label>\n          <input\n            type=\"date\"\n            namae=\"dob\"\n            id=\"dob\"\n            value={this.state.dob}\n            onChange={(e) => this.setState({ dob: e.target.value })}\n          />\n        </div>\n        <div className=\"containerAddr\">\n          <label htmlFor=\"address\">Address :&nbsp;</label>\n          <textarea\n            style={{ resize: \"none\" }}\n            rows={3}\n            id=\"address\"\n            name=\"address\"\n            value={this.state.address}\n            onChange={(e) => this.setState({ address: e.target.value })}\n          />\n        </div>\n        <div className=\"containerEle\">\n          <label htmlFor=\"beneficiaryId\">Beneficiary ID :&nbsp;</label>\n          <input\n            type=\"text\"\n            namw=\"beneficiaryId\"\n            id=\"beneficiaryId\"\n            value={this.state.bId}\n            onChange={(e) => this.setState({ bId: e.target.value })}\n          />\n        </div>\n        <div className=\"containerEle\">\n          <label htmlFor=\"status\">Status :&nbsp;</label>\n          <input\n            type=\"radio\"\n            name=\"statusNF\"\n            checked={this.state.status === \"Not Vaccinated\"}\n            onChange={() => this.setState({ status: \"Not Vaccinated\" })}\n          />\n          <label htmlFor=\"statusNF\">&nbsp;Not Vaccinated</label>\n          <div className=\"spacer\" />\n          <input\n            type=\"radio\"\n            name=\"statusV\"\n            checked={this.state.status === \"Vaccinated\"}\n            onChange={() => this.setState({ status: \"Vaccinated\" })}\n          />\n          <label htmlFor=\"statusV\">&nbsp;Vaccinated</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function App() {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  return (\n    <div>\n      <ComponentToPrint ref={componentRef} />\n      <div>\n        <div onClick={handlePrint} id=\"submitBtn\">\n          Print this out!\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}